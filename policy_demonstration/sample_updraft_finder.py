""" This script demonstrates the behaviour of the trained updraft finder policy by taking samples.
    Every sample corresponds to one full episode in which the glider flies inside the environment  """

import gym
import torch

from parameters import params_updraft_finder
from policy_training import train_updraft_finder
from policy_demonstration import run_episode

# set device
device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")

# initiate environment
env = gym.make('glider3D-v0', agent='updraft_finder')

# set up PPO
ppo = train_updraft_finder.PPO()
ppo.model.actor.load_state_dict(torch.load(
   "updraft_finder_actor_final_16-February-2022_20-25.pt", map_location=torch.device('cpu')))

# load agent parameters
_params_agent = params_updraft_finder.AgentParameters()

start = 0  # adjust this variable, if there are already samples in the folder
n_samples = 10  # choose number of samples

for plot_number in range(start, start + n_samples):
    print("Running iteration number {}!".format(plot_number))
    run_episode.main(env, ppo, plot_number, _params_agent, validation_mask=True)